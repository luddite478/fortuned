global
    daemon
    log 127.0.0.1:514 local0
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy

    # SSL Configuration
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option log-health-checks
    option forwardfor
    option http-server-close
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# Frontend for HTTP traffic (redirect to HTTPS)
frontend http_frontend
    bind *:80
    # Redirect all HTTP traffic to HTTPS
    redirect scheme https code 301 if !{ ssl_fc }

# Frontend for HTTPS traffic
frontend https_frontend
    bind *:443 ssl crt /usr/local/etc/haproxy/certs/haproxy.pem
    
    # Add security headers
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    
    # WebSocket upgrade detection
    acl is_websocket hdr(Upgrade) -i websocket
    acl is_websocket_connection hdr(Connection) -i upgrade
    
    # API path detection  
    acl is_api path_beg /api
    
    # Route WebSocket connections based on upgrade headers
    use_backend websocket_backend if is_websocket is_websocket_connection
    
    # Route API connections
    use_backend api_backend if is_api
    
    # Default to API backend for other paths
    default_backend api_backend

# Backend for HTTP API
backend api_backend
    mode http
    balance roundrobin
    option httpchk GET /api/v1/health
    http-check expect status 200
    
    # Forward to the server container
    server server1 server:8888 check

# Backend for WebSocket connections
backend websocket_backend
    mode http
    balance source
    
    # WebSocket specific settings
    option http-server-close
    option forceclose
    no option httpclose
    
    # Timeout settings for WebSocket
    timeout tunnel 3600s
    timeout server 3600s
    timeout client 3600s
    
    # Forward to the server container WebSocket port
    server websocket1 server:8765 check 
