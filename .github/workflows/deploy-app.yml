name: Deploy new version

on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - 'README.md'
      - 'docs/**'

env:
  REPO_DIR_PATH: /home/luddite478/niyya

jobs:
  redeploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Sync latest changes on remote server
      uses: appleboy/ssh-action@v1.1.0
      env:
        REPO_DIR_PATH: ${{ env.REPO_DIR_PATH }}
      with:
        host: ${{ secrets.HOST_IP }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        envs: REPO_DIR_PATH
        script: |
          cd "$REPO_DIR_PATH"
          git config --global --add safe.directory "$REPO_DIR_PATH"
          git pull origin main || git pull origin master

    - name: Stop and rerun Docker Compose on remote server
      uses: appleboy/ssh-action@v1.1.0
      env:
        REPO_DIR_PATH: ${{ env.REPO_DIR_PATH }}
      with:
        host: ${{ secrets.HOST_IP }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        envs: REPO_DIR_PATH,DOMAIN
        script: |
          cd "$REPO_DIR_PATH"
          docker-compose down -v
          rm docker-compose.envsubst.yaml || true
          export TAILSCALE_IP="$(tailscale ip --4)" 
          envsubst < docker-compose.yaml > docker-compose.envsubst.yaml
          docker-compose -f docker-compose.envsubst.yaml up -d --build --force-recreate

    - name: Wait for server to be ready
      timeout-minutes: 3
      run: |
        echo "Waiting for server to be ready..."
        timeout=180 # 3 minutes
        while ! curl -s http://${{ secrets.HOST_IP }}:8888/get_sound_series > /dev/null; do
          sleep 1
          timeout=$((timeout-1))
          if [ "$timeout" -le 0 ]; then
            echo "Timed out waiting for server to respond."
            exit 1
          fi
        done
        echo "Server is up and responding."