name: Deploy new version

on:
  push:
    paths:
      - 'server/**'
    # branches:
    #   - master

env:
  REPO_DIR_PATH: /home/luddite478/niyya

jobs:
  redeploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install envsubst
      run: sudo apt-get update && sudo apt-get install -y gettext-base

    - name: Sync latest changes on remote server
      uses: appleboy/ssh-action@v1
      env:
        REPO_DIR_PATH: ${{ env.REPO_DIR_PATH }}
      with:
        host: ${{ secrets.HOST_IP }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        envs: REPO_DIR_PATH  # Pass REPO_DIR_PATH as an environment variable
        script: |
          cd "$REPO_DIR_PATH"
          git config --global --add safe.directory "$REPO_DIR_PATH"
          git pull origin master

    - name: Stop and rerun Docker Compose on remote server
      uses: appleboy/ssh-action@v1.1.0
      env:
        REPO_DIR_PATH: ${{ env.REPO_DIR_PATH }}
      with:
        host: ${{ secrets.HOST_IP }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        envs: REPO_DIR_PATH  # Pass REPO_DIR_PATH as an environment variable
        script: |
          cd "$REPO_DIR_PATH/server"
          docker-compose down
          docker-compose up -d --build --force-recreate

    # - name: Wait for site to be ready
    #   timeout-minutes: 3
    #   run: |
    #     echo "Waiting for site to be ready..."
    #     timeout=180 # 3 minutes
    #     while ! curl -s http://${{ secrets.HOST_IP }} > /dev/null; do
    #       sleep 10
    #       timeout=$((timeout-10))
    #       if [ "$timeout" -le 0 ]; then
    #         echo "Timed out waiting for site to respond."
    #         exit 1
    #       fi
    #     done
    #     echo "Site is up and responding."